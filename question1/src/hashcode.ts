const CRCTable = [
    0x17b2bb, 0x1164fa, 0x1aa00f, 0x172a37, 0x11fd29, 0x14cf87, 0x1c1a74, 0x1836d7, 0x113ab6, 0x16fe02, 0x12fa79, 0x14c068, 0x1397f3, 0x1888c8, 0x1a9e5b, 0x19d00e, 0x10c699, 0x0f79d2, 0x158bb2, 0x12710d, 0x1b7ebf, 0x1b1667, 0x11d5a4, 0x17d784, 0x10bef3, 0x105c00, 0x1cc731, 0x1af879, 0x19c4be, 0x1574cb, 0x1c25a4, 0x166faa,
    0x0fe5ad, 0x1e0721, 0x1af06f, 0x1d1200, 0x1c3cb3, 0x1e7bc3, 0x1d1960, 0x1db8c5, 0x112e6f, 0x1247d0, 0x17ea1b, 0x15823f, 0x122653, 0x18197b, 0x144b72, 0x1c3485, 0x181e90, 0x142f0b, 0x1c961e, 0x1c4b0e, 0x1243f1, 0x1b1239, 0x1534f4, 0x0fd22d, 0x19e226, 0x1cb7c2, 0x1c0ec8, 0x14134c, 0x1d4a81, 0x154cee, 0x101f12, 0x1d3382,
    0x16ad70, 0x14d1e5, 0x174266, 0x1d55b0, 0x0fc372, 0x10d439, 0x15aa08, 0x16af3c, 0x16aa1e, 0x1bc0b6, 0x18d10f, 0x176472, 0x1cec9c, 0x1318fc, 0x16d567, 0x1242e7, 0x1dadea, 0x1badbd, 0x10d5ef, 0x15d2df, 0x174bd2, 0x15be49, 0x17944d, 0x1c6746, 0x0f7e94, 0x1025ff, 0x1a008e, 0x1c99d6, 0x1aab99, 0x104a9a, 0x1e043c, 0x12a35e,
    0x1b60b6, 0x1018a1, 0x1236bf, 0x1d2252, 0x1db7b2, 0x192c72, 0x12af73, 0x199968, 0x14de12, 0x179bad, 0x1b505d, 0x13ccd7, 0x1225ad, 0x1d02cc, 0x126b12, 0x17bb4e, 0x1d93b8, 0x1e0a3f, 0x115a1a, 0x16e155, 0x1c83fc, 0x19af5d, 0x16f017, 0x11ea82, 0x1864f1, 0x196da1, 0x13194d, 0x19c349, 0x11faf3, 0x10cb09, 0x133340, 0x1249cd,
    0x1961c0, 0x144a79, 0x176a1b, 0x1931d8, 0x127a7f, 0x1896ad, 0x138d93, 0x18be0b, 0x196ab1, 0x1db8ae, 0x157aa8, 0x13638d, 0x1e059d, 0x16a7d3, 0x1be2d2, 0x12ca68, 0x1b3655, 0x102e56, 0x19d8e2, 0x19e7d2, 0x14fe77, 0x184d8c, 0x11dee9, 0x170f90, 0x1b92a1, 0x196b90, 0x179232, 0x0f878a, 0x165f53, 0x137ac8, 0x149c8a, 0x10c506,
    0x119271, 0x1013e2, 0x17b2a5, 0x162d7a, 0x109772, 0x10763c, 0x1557ab, 0x13e574, 0x15be9c, 0x1579c6, 0x164ba6, 0x1bddf3, 0x10de96, 0x1e7087, 0x18533f, 0x150879, 0x154aeb, 0x1c9754, 0x11a695, 0x1d6b04, 0x19b557, 0x11b30a, 0x18bd9e, 0x1d148b, 0x191cc7, 0x146db9, 0x10eedc, 0x19c2cb, 0x15ada5, 0x191e07, 0x1aff56, 0x18c82b,
    0x18c0e3, 0x1ca924, 0x10ac1c, 0x14f47e, 0x111921, 0x148473, 0x1adb5c, 0x10c9e3, 0x1dbd74, 0x0fb8b7, 0x14be2f, 0x0f539d, 0x0f4f13, 0x11414b, 0x133923, 0x1b65ee, 0x1bf284, 0x1ce092, 0x1b5273, 0x194931, 0x1890be, 0x19fdcc, 0x1dfcb6, 0x0fa42e, 0x1df44b, 0x157562, 0x1755f0, 0x127a66, 0x185056, 0x18af1e, 0x1102e5, 0x13cdf3,
    0x14e1ef, 0x15fa8a, 0x13f3e0, 0x1c568c, 0x1449d2, 0x14c3af, 0x1d4bac, 0x15a834, 0x125e14, 0x16daec, 0x1c2fad, 0x1df255, 0x105321, 0x104233, 0x1550b6, 0x17b1ee, 0x1bca82, 0x15c100, 0x1059f1, 0x0f5f2c, 0x17f616, 0x16bcf1, 0x16bf5c, 0x1e65c1, 0x1cdceb, 0x16dff5, 0x12ff43, 0x1e1a36, 0x100040, 0x0f6baf, 0x1191e9, 0x10a9ce,
];
const toHashCode=(str:String):number=>{
    var hash = 0, i, chr;
    for (i = 0; i < str.length; i++) {
      chr   = CRCTable[str.charCodeAt(i)];
      hash  = ((hash << 5) - hash) + chr;
    }
    return hash;
}

export default  toHashCode;


